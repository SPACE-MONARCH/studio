/**
 * @fileoverview Firestore Security Rules for Deadlock Defender App
 *
 * Core Philosophy:
 * This ruleset allows public read access to scenarios while restricting write access.
 *
 * Data Structure:
 * - /scenarios/{scenarioId}: Stores individual scenario data.
 *
 * Key Security Decisions:
 * - Anonymous authentication is used.
 * - Public read access to scenarios is enabled.
 * - Write access to scenarios is disallowed for all users in the prototype.
 *
 * Access Control Patterns:
 * - Scenarios: Public Read with Owner-Only Writes (emulated by denying all writes in this prototype).
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to the /scenarios/{scenarioId} collection.
     * @path /scenarios/{scenarioId}
     * @allow (get, list): Any user can read scenario data.
     * @deny (create, update, delete): No user can create, update, or delete scenario data in this prototype.
     * @principle Public read, restricted writes.
     */
    match /scenarios/{scenarioId} {
      allow get: if true;
      allow list: if true;

      // CRITICAL: Writes are disallowed in this prototype.
      allow create, update, delete: if false;
    }
  }
}