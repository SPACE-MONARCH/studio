/**
 * @fileoverview Firestore Security Rules for Deadlock Defender App.
 *
 * Core Philosophy:
 * This ruleset prioritizes ease of development in the prototyping phase while maintaining a secure-by-default posture.
 * All authenticated users can read scenarios, but writes are explicitly forbidden.
 *
 * Data Structure:
 * The primary data is stored in the `/scenarios/{scenarioId}` collection.
 *
 * Key Security Decisions:
 * - Scenarios are globally readable, but write access is denied for all users in this version of rules. This ensure a secure starting point while app features are still being built.
 * - No user-specific data or ownership models are currently enforced. This will be revisited as user-generated content is added.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to the /scenarios/{scenarioId} collection.
     * @path /scenarios/{scenarioId}
     * @allow (get, list) Any authenticated user can read scenario data.
     * @deny (create, update, delete) No user can create, update, or delete scenario data.
     * @principle Public read, owner-only writes (currently, writes are disabled for prototyping).
     */
    match /scenarios/{scenarioId} {
      allow get: if true;
      allow list: if true;

      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}